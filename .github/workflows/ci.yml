name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    environment: test
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Check for changes
      id: changes
      uses: dorny/paths-filter@v2
      with:
        filters: |
          docker:
            - 'Dockerfile'
            - 'Dockerfile.test'
            - 'requirements.txt'
            - 'pyproject.toml'
          python:
            - 'python/**'
            - 'tests/**'
            
    - name: Build and push main Docker image
      if: steps.changes.outputs.docker == 'true'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ghcr.io/suizer98/rinexpos:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push test Docker image
      if: steps.changes.outputs.docker == 'true'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile.test
        push: true
        tags: ghcr.io/suizer98/rinexpos-test:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Run complete test suite
      run: |
        docker compose --profile test run test
      env:
        SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
        
    # - name: Test static plotting
    #   run: |
    #     # Test static plot generation
    #     docker compose run --rm rinexpos python3 python/plot_satellites.py results/chur1610_python.csv --max_epochs=100
        
    - name: Verify output files
      run: |
        ls -la results/
        test -f results/chur1610_python.png
        
    # - name: Upload test results
    #   uses: actions/upload-artifact@v4
    #   if: always()
    #   with:
    #     name: test-results
    #     path: |
    #       coverage.xml
    #       results/
